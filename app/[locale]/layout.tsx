import type { Metadata } from "next";
import { Roboto, Space_Grotesk } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { ClerkProvider } from "@clerk/nextjs";
import { localization } from "@/lib/utils";
import { ChildProps } from "@/types";

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: ["400", "500", "700", "900"],
});

const spaceGrotesk = Space_Grotesk({
  variable: "--font-space-grotesk",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
});

export const metadata: Metadata = {
  title: "Udemy",
  description: "Generated by create next app",
  icons: {
    icon: "/favicon.ico",
  }
};

interface Props extends ChildProps {
  params: { locale: string };
}

export default async function Layout({children, params: {locale}}: Props) {
  
  const messages = await getMessages();
  const local = localization(locale);
  return (
    <ClerkProvider localization={local}>
      <html suppressHydrationWarning lang={locale} >
        <body suppressHydrationWarning className={`${roboto.variable} ${spaceGrotesk.variable} antialiased`}        >
          <NextIntlClientProvider messages={messages}>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <main>{children}</main>
            </ThemeProvider>
          </NextIntlClientProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
